# .github/workflows/prod-deploy.yml
name: PROD deploy (manual approval)
on:
  workflow_dispatch: {}
permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4
      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Verify DB URL (sslmode)
        run: |
          if [[ "${{ secrets.PROD_DATABASE_URL }}" != *"sslmode="* ]]; then
            echo "ERROR: PROD_DATABASE_URL must include sslmode=require."; exit 1; fi
      - name: Apply migrations to Production using Supabase CLI
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          # Extract project ID from PROD_SUPABASE_URL (format: https://<project-id>.supabase.co)
          SUPABASE_URL="${{ secrets.PROD_SUPABASE_URL }}"
          PROJECT_ID=$(echo $SUPABASE_URL | sed -E 's/https:\/\/([^.]+)\.supabase\.co.*/\1/')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

          chmod +x scripts/db/apply_migrations_cli.sh
          scripts/db/apply_migrations_cli.sh "$PROJECT_ID" "$SUPABASE_ACCESS_TOKEN" "$SUPABASE_DB_PASSWORD"
      - name: Snapshot schema using Supabase CLI
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          PROJECT_ID: ${{ env.PROJECT_ID }}
        run: |
          # Create bin directory in home if it doesn't exist
          mkdir -p "$HOME/.bin"

          # Download the latest version for Linux
          curl -s -L https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar -xz -C "$HOME/.bin"

          # Make it executable
          chmod +x "$HOME/.bin/supabase"

          # Add to PATH
          export PATH="$HOME/.bin:$PATH"

          # Create snapshots directory
          mkdir -p snapshots
          SNAPSHOT="snapshots/schema-prod-$(date +'%Y%m%d-%H%M%S').sql"

          # Link project with DB password
          $HOME/.bin/supabase link --project-ref "$PROJECT_ID" --password "$SUPABASE_DB_PASSWORD"

          # Run dump command
          $HOME/.bin/supabase db dump -f "$SNAPSHOT" --linked
      - name: Upload schema snapshot
        uses: actions/upload-artifact@v4
        with:
          name: prod-schema-snapshot
          path: snapshots/
          retention-days: 30

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Supabase CLI
        run: |
          # Create bin directory in home if it doesn't exist
          mkdir -p "$HOME/.bin"

          # Download the latest version for Linux
          curl -s -L https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar -xz -C "$HOME/.bin"

          # Make it executable
          chmod +x "$HOME/.bin/supabase"

          # Add to PATH
          export PATH="$HOME/.bin:$PATH"
          echo "$HOME/.bin" >> $GITHUB_PATH

      - name: Extract Project ID from Production URL
        run: |
          # Extract project ID from PROD_SUPABASE_URL (format: https://<project-id>.supabase.co)
          SUPABASE_URL="${{ secrets.PROD_SUPABASE_URL }}"
          PROJECT_ID=$(echo $SUPABASE_URL | sed -E 's/https:\/\/([^.]+)\.supabase\.co.*/\1/')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

      - name: Generate types from production schema
        env:
          SUPABASE_PROJECT_ID: ${{ env.PROJECT_ID }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          # Link project with DB password
          $HOME/.bin/supabase link --project-ref "$PROJECT_ID" --password "$SUPABASE_DB_PASSWORD"

          # Generate types
          node scripts/gen-types.cjs

      - name: Commit and push if there are changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/lib/database/supabase-types.ts
          git diff --quiet && git diff --staged --quiet || git commit -m "[auto] Update Supabase type definitions from Production"
          git push
