name: Ministry Enrollment Report

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: 'main'
        type: string
      environment:
        description: 'Environment to run against'
        required: false
        default: 'PROD'
        type: choice
        options:
          - 'PROD'
          - 'UAT'
      recipient_emails:
        description: 'Email addresses to send the report to (comma-separated)'
        required: true
        type: string
      ministry_ids:
        description: 'Ministry IDs to include (comma-separated, leave empty for all ministries)'
        required: false
        default: ''
        type: string
      dry_run:
        description: 'Run in dry mode (no emails sent)'
        required: false
        default: false
        type: boolean
      test_mode:
        description: 'Run in test mode (emails only sent to monitor addresses)'
        required: false
        default: false
        type: boolean

jobs:
  enrollment-report-prod:
    if: ${{ inputs.environment == 'PROD' || inputs.environment == '' }}
    runs-on: ubuntu-latest
    environment: production
    env:
      ENVIRONMENT: PROD
      DRY_RUN: ${{ inputs.dry_run && 'true' || 'false' }}
      TEST_MODE: ${{ inputs.test_mode && 'true' || 'false' }}
      RECIPIENT_EMAILS: ${{ inputs.recipient_emails }}
      MINISTRY_IDS: ${{ inputs.ministry_ids }}
      SUPABASE_URL: ${{ secrets.PROD_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.PROD_SUPABASE_SERVICE_ROLE_KEY }}
      MJ_API_KEY: ${{ secrets.PROD_MJ_API_KEY }}
      MJ_API_SECRET: ${{ secrets.PROD_MJ_API_SECRET }}
      FROM_EMAIL: ${{ secrets.PROD_FROM_EMAIL }}
      MONITOR_EMAILS: ${{ secrets.PROD_MONITOR_EMAILS }}
      EMAIL_MODE: ${{ secrets.PROD_EMAIL_MODE || 'mailjet' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'main' }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug environment variables
        run: |
          echo "=== PROD Ministry Enrollment Report Environment Variables Debug ==="
          echo "ENVIRONMENT: $ENVIRONMENT"
          echo "DRY_RUN: $DRY_RUN"
          echo "TEST_MODE: $TEST_MODE"
          echo "RECIPIENT_EMAILS: '$RECIPIENT_EMAILS'"
          echo "MINISTRY_IDS: '$MINISTRY_IDS'"
          echo "SUPABASE_URL: ${SUPABASE_URL:0:20}..."
          echo "SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:0:10}..."
          echo "FROM_EMAIL: '$FROM_EMAIL'"
          echo "MONITOR_EMAILS: '$MONITOR_EMAILS'"
          echo "MJ_API_KEY: ${MJ_API_KEY:0:10}..."
          echo "MJ_API_SECRET: ${MJ_API_SECRET:0:10}..."
          echo "EMAIL_MODE: $EMAIL_MODE"
          echo "=========================================="

      - name: Run ministry enrollment report (PROD)
        run: |
          echo "Running PROD ministry enrollment report..."
          echo "Environment: $ENVIRONMENT"
          echo "Dry run: $DRY_RUN"
          echo "Test mode: $TEST_MODE"
          echo "Recipients: $RECIPIENT_EMAILS"
          echo "Ministry IDs: $MINISTRY_IDS"
          echo "Current directory: $(pwd)"
          echo "Listing scripts directory:"
          ls -la scripts/
          echo "Checking if ministryEnrollmentReport.js exists:"
          ls -la scripts/ministryEnrollmentReport.js
          node scripts/ministryEnrollmentReport.js

      - name: Log completion
        if: success()
        run: |
          echo "PROD ministry enrollment report completed successfully at $(date)"
          echo "Dry run: $DRY_RUN"
          echo "Test mode: $TEST_MODE"

      - name: Log failure
        if: failure()
        run: |
          echo "PROD ministry enrollment report failed at $(date)"
          echo "Dry run: $DRY_RUN"
          echo "Test mode: $TEST_MODE"

  enrollment-report-uat:
    if: ${{ inputs.environment == 'UAT' }}
    runs-on: ubuntu-latest
    environment: uat
    env:
      ENVIRONMENT: UAT
      DRY_RUN: ${{ inputs.dry_run && 'true' || 'false' }}
      TEST_MODE: ${{ inputs.test_mode && 'true' || 'false' }}
      RECIPIENT_EMAILS: ${{ inputs.recipient_emails }}
      MINISTRY_IDS: ${{ inputs.ministry_ids }}
      SUPABASE_URL: ${{ secrets.UAT_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.UAT_SUPABASE_SERVICE_ROLE_KEY }}
      MJ_API_KEY: ${{ secrets.UAT_MJ_API_KEY }}
      MJ_API_SECRET: ${{ secrets.UAT_MJ_API_SECRET }}
      FROM_EMAIL: ${{ secrets.UAT_FROM_EMAIL }}
      MONITOR_EMAILS: ${{ secrets.UAT_MONITOR_EMAILS }}
      EMAIL_MODE: ${{ secrets.EMAIL_MODE || 'mailjet' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'main' }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug environment variables
        run: |
          echo "=== UAT Ministry Enrollment Report Environment Variables Debug ==="
          echo "ENVIRONMENT: $ENVIRONMENT"
          echo "DRY_RUN: $DRY_RUN"
          echo "TEST_MODE: $TEST_MODE"
          echo "RECIPIENT_EMAILS: '$RECIPIENT_EMAILS'"
          echo "MINISTRY_IDS: '$MINISTRY_IDS'"
          echo "SUPABASE_URL: ${SUPABASE_URL:0:20}..."
          echo "SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:0:10}..."
          echo "FROM_EMAIL: '$FROM_EMAIL'"
          echo "MONITOR_EMAILS: '$MONITOR_EMAILS'"
          echo "MJ_API_KEY: ${MJ_API_KEY:0:10}..."
          echo "MJ_API_SECRET: ${MJ_API_SECRET:0:10}..."
          echo "EMAIL_MODE: $EMAIL_MODE"
          echo "=========================================="

      - name: Run ministry enrollment report (UAT)
        run: |
          echo "Running UAT ministry enrollment report..."
          echo "Environment: $ENVIRONMENT"
          echo "Dry run: $DRY_RUN"
          echo "Test mode: $TEST_MODE"
          echo "Recipients: $RECIPIENT_EMAILS"
          echo "Ministry IDs: $MINISTRY_IDS"
          echo "Current directory: $(pwd)"
          echo "Listing scripts directory:"
          ls -la scripts/
          echo "Checking if ministryEnrollmentReport.js exists:"
          ls -la scripts/ministryEnrollmentReport.js
          node scripts/ministryEnrollmentReport.js

      - name: Log completion
        if: success()
        run: |
          echo "UAT ministry enrollment report completed successfully at $(date)"
          echo "Dry run: $DRY_RUN"
          echo "Test mode: $TEST_MODE"

      - name: Log failure
        if: failure()
        run: |
          echo "UAT ministry enrollment report failed at $(date)"
          echo "Dry run: $DRY_RUN"
          echo "Test mode: $TEST_MODE"
