name: Generate Supabase Types (CI)

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'If true, commit and push generated types to a branch and open a PR'
        required: false
        default: 'false'

permissions:
  contents: write
  pull-requests: write

jobs:
  gen-types:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install supabase CLI and generate types (debug)
        id: gen
        run: |
          set -euo pipefail
          set -x
          echo "Installing Supabase CLI (debug mode)"

          SUPABASE_URL="https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz"
          echo "Target URL: $SUPABASE_URL"

          echo "Testing HEAD for the asset (shows HTTP headers)"
          curl -sS -I -L -D /tmp/supabase_headers.txt "$SUPABASE_URL" || true
          echo "---- HEAD headers ----"
          sed -n '1,200p' /tmp/supabase_headers.txt || true
          echo "----------------------"

          echo "Downloading asset to /tmp/supabase_asset.tar.gz (retries enabled)"
          mkdir -p /tmp
          curl -sSL --retry 3 --retry-delay 2 -D /tmp/curl_headers.txt -o /tmp/supabase_asset.tar.gz -w "%{http_code}" "$SUPABASE_URL" > /tmp/curl_http_code || true

          echo "---- curl http code ----"
          cat /tmp/curl_http_code || true
          echo "---- curl headers ----"
          sed -n '1,200p' /tmp/curl_headers.txt || true
          echo "---- downloaded file info ----"
          file /tmp/supabase_asset.tar.gz || true
          echo "---- first bytes (helps detect HTML 404 pages) ----"
          head -c 512 /tmp/supabase_asset.tar.gz | sed -n '1,200p' || true

          echo "Attempting to extract to $HOME/.bin"
          mkdir -p "$HOME/.bin"
          if tar -xz -f /tmp/supabase_asset.tar.gz -C "$HOME/.bin"; then
            echo "Extraction succeeded"
          else
            echo "tar extraction failed; dumping first 200 lines of the downloaded file to help debug:" >&2
            hexdump -C /tmp/supabase_asset.tar.gz | sed -n '1,200p' || true
            echo "Exiting with error" >&2
            exit 1
          fi

          chmod +x "$HOME/.bin/supabase"
          echo "$HOME/.bin" >> $GITHUB_PATH

          echo "Using supabase binary from $HOME/.bin"
          $HOME/.bin/supabase --version || true
          echo "Attempting local generation first (with --debug)"
          if $HOME/.bin/supabase gen types typescript --local --debug; then
            echo "Local generation succeeded"
          else
            echo "Local generation failed. Will attempt remote generation using SUPABASE_* secrets if available."
            if [ -z "${PROD_SUPABASE_URL:-}" ] || [ -z "${SUPABASE_DB_PASSWORD:-}" ] || [ -z "${SUPABASE_ACCESS_TOKEN:-}" ]; then
              echo "Required secrets (PROD_SUPABASE_URL, SUPABASE_DB_PASSWORD, SUPABASE_ACCESS_TOKEN) are missing; cannot perform remote generation." >&2
              exit 1
            fi

            # Extract project id from PROD_SUPABASE_URL and link
            PROJECT_ID=$(echo "$PROD_SUPABASE_URL" | sed -E 's/https:\/\/([^.]+)\.supabase\.co.*/\1/')
            echo "Project ID: $PROJECT_ID"
            echo "Linking to Supabase project..."
            $HOME/.bin/supabase link --project-ref "$PROJECT_ID" --password "$SUPABASE_DB_PASSWORD"

            echo "Generating types via node script (scripts/gen-types.cjs)"
            SUPABASE_PROJECT_ID="$PROJECT_ID" \
            SUPABASE_ACCESS_TOKEN="$SUPABASE_ACCESS_TOKEN" \
            node scripts/gen-types.cjs
          fi

      - name: Ensure generated file exists
        run: |
          if [ ! -f src/lib/database/supabase-types.ts ]; then
            echo "Generated types file not found" >&2
            ls -la src/lib/database || true
            exit 1
          fi

      - name: Upload generated types artifact
        uses: actions/upload-artifact@v4
        with:
          name: supabase-types
          path: src/lib/database/supabase-types.ts

      - name: Commit and open PR (optional)
        if: ${{ github.event.inputs.commit == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          BRANCH=ci/gen-supabase-types-$(date +%s)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add src/lib/database/supabase-types.ts
          git commit -m "chore(gen): regenerate supabase types"
          git push --set-upstream origin "$BRANCH"
          echo "Creating PR..."
          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls"
          BODY=$(jq -n --arg title "chore(gen): regenerate supabase types" --arg head "$BRANCH" --arg base "develop" '{title:$title,head:$head,base:$base,body:"Auto-generated supabase types (CI)"}')
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" $API_URL -d "$BODY" | jq -r '.html_url'
