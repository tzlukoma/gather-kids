name: Generate Supabase Types (CI)

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'If true, commit and push generated types to a branch and open a PR'
        required: false
        default: 'false'

permissions:
  contents: write
  pull-requests: write

jobs:
  gen-types:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install specific compatible Supabase CLI version (v1.52.2)
        id: gen
        run: |
          set -euo pipefail
          set -x
          echo "Installing Supabase CLI (version 1.52.2)"

          # Use a specific, known-compatible version instead of latest
          SUPABASE_URL="https://github.com/supabase/cli/releases/download/v1.52.2/supabase_linux_amd64.tar.gz"
          echo "Target URL: $SUPABASE_URL"

          echo "Downloading specific compatible version 1.52.2"
          mkdir -p "$HOME/.bin"
          curl -sSL --retry 3 --retry-delay 2 -o /tmp/supabase_1_52_2.tar.gz "$SUPABASE_URL"
          
          echo "Downloaded file info:"
          file /tmp/supabase_1_52_2.tar.gz || true
          
          echo "Extracting to $HOME/.bin"
          tar -xzf /tmp/supabase_1_52_2.tar.gz -C "$HOME/.bin"

          chmod +x "$HOME/.bin/supabase"
          echo "$HOME/.bin" >> $GITHUB_PATH
          
          echo "Supabase CLI version:"
          "$HOME/.bin/supabase" --version
          
          # Try generating types with a simple approach first
          echo "Attempting to generate types using simple schema approach"
          if "$HOME/.bin/supabase" gen types typescript --schema public; then
            echo "Local generation succeeded"
          else
            echo "Local generation failed. Will attempt remote generation using SUPABASE_* secrets if available."
            if [ -z "${PROD_SUPABASE_URL:-}" ] || [ -z "${SUPABASE_DB_PASSWORD:-}" ] || [ -z "${SUPABASE_ACCESS_TOKEN:-}" ]; then
              echo "Required secrets (PROD_SUPABASE_URL, SUPABASE_DB_PASSWORD, SUPABASE_ACCESS_TOKEN) are missing; cannot perform remote generation." >&2
              exit 1
            fi

            # Extract project id from PROD_SUPABASE_URL and link
            PROJECT_ID=$(echo "$PROD_SUPABASE_URL" | sed -E 's/https:\/\/([^.]+)\.supabase\.co.*/\1/')
            echo "Project ID: $PROJECT_ID"
            echo "Linking to Supabase project..."
            "$HOME/.bin/supabase" link --project-ref "$PROJECT_ID" --password "$SUPABASE_DB_PASSWORD"

            echo "Generating types via linked project"
            "$HOME/.bin/supabase" gen types typescript --schema public
          fi

      - name: Ensure generated file exists
        run: |
          if [ ! -f src/lib/database/supabase-types.ts ]; then
            echo "Generated types file not found" >&2
            ls -la src/lib/database || true
            exit 1
          fi

      - name: Upload generated types artifact
        uses: actions/upload-artifact@v3
        with:
          name: supabase-types
          path: src/lib/database/supabase-types.ts

      - name: Commit and open PR (optional)
        if: ${{ github.event.inputs.commit == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          BRANCH=ci/gen-supabase-types-$(date +%s)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git add src/lib/database/supabase-types.ts
          git commit -m "chore(gen): regenerate supabase types"
          git push --set-upstream origin "$BRANCH"
          echo "Creating PR..."
          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls"
          BODY=$(jq -n --arg title "chore(gen): regenerate supabase types" --arg head "$BRANCH" --arg base "develop" '{title:$title,head:$head,base:$base,body:"Auto-generated supabase types (CI)"}')
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" $API_URL -d "$BODY" | jq -r '.html_url'
