name: Close Issue When All PRs Merged

on:
  pull_request:
    types: [closed]

jobs:
  close-linked-issues:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Close linked issues when all PRs are merged
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            // Extract issue numbers from PR body and title
            const prBody = pullRequest.body || '';
            const prTitle = pullRequest.title || '';
            const text = `${prTitle} ${prBody}`;
            
            // Regex to find issue references (closes #123, fixes #456, resolves #789, etc.)
            const issueRegex = /(?:close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s+#(\d+)/gi;
            const matches = [...text.matchAll(issueRegex)];
            
            if (matches.length === 0) {
              console.log('No linked issues found');
              return;
            }

            // Process each linked issue
            for (const match of matches) {
              const issueNumber = parseInt(match[1]);
              console.log(`Checking issue #${issueNumber}`);
              
              try {
                // Get the issue details
                const { data: issue } = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });

                // Skip if issue is already closed
                if (issue.state === 'closed') {
                  console.log(`Issue #${issueNumber} is already closed`);
                  continue;
                }

                // Get all PRs that reference this issue
                const { data: prs } = await github.rest.search.issuesAndPullRequests({
                  q: `repo:${context.repo.owner}/${context.repo.repo} is:pr #${issueNumber}`
                });

                // Check if all PRs linking to this issue are merged
                let allPRsMerged = true;
                let linkedPRs = [];

                for (const pr of prs.items) {
                  if (pr.pull_request) {
                    const { data: prDetails } = await github.rest.pulls.get({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      pull_number: pr.number
                    });
                    
                    linkedPRs.push(prDetails);
                    
                    // Check if PR body or title references this issue
                    const prText = `${prDetails.title} ${prDetails.body || ''}`;
                    const hasReference = /(?:close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s+#(\d+)/gi.test(prText.replace(/(\d+)/g, (num) => {
                      return parseInt(num) === issueNumber ? num : '';
                    }));
                    
                    if (hasReference && prDetails.state === 'open') {
                      allPRsMerged = false;
                      console.log(`PR #${prDetails.number} is still open`);
                      break;
                    } else if (hasReference && prDetails.merged_at === null && prDetails.state === 'closed') {
                      allPRsMerged = false;
                      console.log(`PR #${prDetails.number} was closed without merging`);
                      break;
                    }
                  }
                }

                // Close the issue if all PRs are merged
                if (allPRsMerged && linkedPRs.length > 0) {
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    state: 'closed'
                  });
                  
                  // Add a comment explaining why it was closed
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    body: `ðŸŽ‰ Automatically closing this issue as all associated pull requests have been merged.`
                  });
                  
                  console.log(`âœ… Closed issue #${issueNumber}`);
                } else {
                  console.log(`Issue #${issueNumber} still has open/unmerged PRs`);
                }
                
              } catch (error) {
                console.log(`Error processing issue #${issueNumber}:`, error.message);
              }
            }