__tests__/lib/database-adapter-interface.test.ts(221,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(234,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(251,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(270,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(286,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(305,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(327,5): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/database-adapter-interface.test.ts(348,65): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
__tests__/lib/supabase-adapter-integration.test.ts(223,4): error TS18048: 'h.address_line1' is possibly 'undefined'.
__tests__/lib/supabase-adapter-integration.test.ts(230,4): error TS18048: 'h.address_line1' is possibly 'undefined'.
__tests__/lib/supabase-adapter-integration.test.ts(239,4): error TS18048: 'h.address_line1' is possibly 'undefined'.
__tests__/lib/supabase-adapter-integration.test.ts(276,4): error TS18048: 'h.address_line1' is possibly 'undefined'.
__tests__/lib/supabase-adapter-performance.test.ts(13,4): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
doc-site/src/components/HomepageFeatures/index.tsx(52,10): error TS2786: 'Heading' cannot be used as a JSX component.
  Its type '(props: Props) => ReactNode' is not a valid JSX element type.
    Type '(props: Props) => ReactNode' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("/Users/Thomas/DEV/source_code/_currentProjects/gather-kids/doc-site/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'ReactElement<unknown, string | JSXElementConstructor<any>>' is not assignable to type 'ReactNode'.
          Property 'children' is missing in type 'ReactElement<unknown, string | JSXElementConstructor<any>>' but required in type 'ReactPortal'.
doc-site/src/components/HomepageFeatures/index.tsx(53,12): error TS2322: Type 'import("/Users/Thomas/DEV/source_code/_currentProjects/gather-kids/doc-site/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
  Type 'ReactElement<unknown, string | JSXElementConstructor<any>>' is not assignable to type 'ReactNode'.
    Property 'children' is missing in type 'ReactElement<unknown, string | JSXElementConstructor<any>>' but required in type 'ReactPortal'.
doc-site/src/pages/index.tsx(6,30): error TS2307: Cannot find module '@site/src/components/HomepageFeatures' or its corresponding type declarations.
doc-site/src/pages/index.tsx(16,10): error TS2786: 'Heading' cannot be used as a JSX component.
  Its type '(props: Props) => ReactNode' is not a valid JSX element type.
    Type '(props: Props) => ReactNode' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("/Users/Thomas/DEV/source_code/_currentProjects/gather-kids/doc-site/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'ReactElement<unknown, string | JSXElementConstructor<any>>' is not assignable to type 'ReactNode'.
          Property 'children' is missing in type 'ReactElement<unknown, string | JSXElementConstructor<any>>' but required in type 'ReactPortal'.
doc-site/src/pages/index.tsx(21,12): error TS2786: 'Link' cannot be used as a JSX component.
  Its type '(props: Props) => ReactNode' is not a valid JSX element type.
    Type '(props: Props) => ReactNode' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("/Users/Thomas/DEV/source_code/_currentProjects/gather-kids/doc-site/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'ReactElement<unknown, string | JSXElementConstructor<any>>' is not assignable to type 'ReactNode'.
          Property 'children' is missing in type 'ReactElement<unknown, string | JSXElementConstructor<any>>' but required in type 'ReactPortal'.
doc-site/src/pages/index.tsx(26,12): error TS2786: 'Link' cannot be used as a JSX component.
  Its type '(props: Props) => ReactNode' is not a valid JSX element type.
    Type '(props: Props) => ReactNode' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("/Users/Thomas/DEV/source_code/_currentProjects/gather-kids/doc-site/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'ReactElement<unknown, string | JSXElementConstructor<any>>' is not assignable to type 'ReactNode'.
          Property 'children' is missing in type 'ReactElement<unknown, string | JSXElementConstructor<any>>' but required in type 'ReactPortal'.
doc-site/src/pages/index.tsx(41,6): error TS2786: 'Layout' cannot be used as a JSX component.
  Its type '{ (props: Props): ReactNode; (props: Props): ReactNode; }' is not a valid JSX element type.
    Type '{ (props: Props): ReactNode; (props: Props): ReactNode; }' is not assignable to type '(props: any, deprecatedLegacyContext?: any) => ReactNode'.
      Type 'import("/Users/Thomas/DEV/source_code/_currentProjects/gather-kids/doc-site/node_modules/@types/react/index").ReactNode' is not assignable to type 'React.ReactNode'.
        Type 'ReactElement<unknown, string | JSXElementConstructor<any>>' is not assignable to type 'ReactNode'.
          Property 'children' is missing in type 'ReactElement<unknown, string | JSXElementConstructor<any>>' but required in type 'ReactPortal'.
src/app/household/layout.tsx(60,5): error TS2322: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.
src/app/household/page.tsx(29,5): error TS2322: Type 'string | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'.
src/app/onboarding/page.tsx(401,33): error TS2322: Type '{ user: any; }' is not assignable to type 'IntrinsicAttributes & AuthDebugProps'.
  Property 'user' does not exist on type 'IntrinsicAttributes & AuthDebugProps'.
src/app/settings/security/page.tsx(348,19): error TS2322: Type '{ user: any; }' is not assignable to type 'IntrinsicAttributes & AuthDebugProps'.
  Property 'user' does not exist on type 'IntrinsicAttributes & AuthDebugProps'.
src/components/AuthDebug.tsx(63,10): error TS7006: Parameter 'event' implicitly has an 'any' type.
src/components/AuthDebug.tsx(63,17): error TS7006: Parameter 'session' implicitly has an 'any' type.
src/components/gatherKids/bible-bee-progress-list.tsx(202,39): error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'SetStateAction<string | null>'.
  Type 'undefined' is not assignable to type 'SetStateAction<string | null>'.
src/components/settings/settings-modal.tsx(355,29): error TS2322: Type 'Dispatch<SetStateAction<"profile" | "security">>' is not assignable to type '(value: string) => void'.
  Types of parameters 'value' and 'value' are incompatible.
    Type 'string' is not assignable to type 'SetStateAction<"profile" | "security">'.
src/test-utils/test-db.ts(27,4): error TS2345: Argument of type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is not assignable to parameter of type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>'.
  Type '{ from: (tableName: string) => { select: (columns?: string) => { eq: (column: string, value: any) => ...; or: (condition: string) => ...; limit: (count: number) => ...; range: (from: number, to: number) => ...; single: () => Promise<...>; then: (callback?: any) => Promise<...>; }; insert: (data: any) => { ...; }; up...' is missing the following properties from type 'SupabaseClient<Database, "public", "public", { Tables: { [key: string]: { Row: any; Insert: any; Update: any; Relationships: any[]; }; }; Views: {}; Functions: {}; Enums: {}; CompositeTypes: {}; }, { PostgrestVersion: "12"; }>': supabaseUrl, supabaseKey, realtime, realtimeUrl, and 15 more.
src/test-utils/test-db.ts(64,49): error TS2345: Argument of type '{ name: string; description: string; min_age: number; max_age: number; is_active: true; }' is not assignable to parameter of type 'Omit<Ministry, "created_at" | "updated_at" | "ministry_id">'.
  Type '{ name: string; description: string; min_age: number; max_age: number; is_active: true; }' is missing the following properties from type 'Omit<Ministry, "created_at" | "updated_at" | "ministry_id">': code, enrollment_type, data_profile
src/test-utils/test-db.ts(74,4): error TS2353: Object literal may only specify known properties, and 'name' does not exist in type 'Omit<RegistrationCycle, "created_at" | "updated_at" | "cycle_id">'.
src/test-utils/test-db.ts(81,57): error TS2345: Argument of type '{ child_id: string; cycle_id: string; status: "active"; }' is not assignable to parameter of type 'Omit<Registration, "created_at" | "updated_at" | "registration_id">'.
  Type '{ child_id: string; cycle_id: string; status: "active"; }' is missing the following properties from type 'Omit<Registration, "created_at" | "updated_at" | "registration_id">': pre_registered_sunday_school, consents, submitted_via, submitted_at
src/test-utils/test-db.ts(92,4): error TS2353: Object literal may only specify known properties, and 'enrolled_at' does not exist in type 'Omit<MinistryEnrollment, "created_at" | "updated_at" | "enrollment_id">'.
src/test-utils/test-db.ts(98,4): error TS2353: Object literal may only specify known properties, and 'date' does not exist in type 'Omit<Event, "created_at" | "updated_at" | "event_id">'.
tests/playwright/email/global-setup.ts(20,9): error TS18046: 'error' is of type 'unknown'.
tests/playwright/page-objects/registration.page.ts(34,72): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
tests/playwright/page-objects/registration.page.ts(35,72): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
tests/playwright/page-objects/registration.page.ts(36,86): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
tests/playwright/page-objects/registration.page.ts(37,76): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
tests/playwright/page-objects/registration.page.ts(55,73): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
tests/playwright/page-objects/registration.page.ts(56,71): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
tests/playwright/page-objects/registration.page.ts(57,89): error TS2339: Property 'last' does not exist on type 'Promise<void>'.
